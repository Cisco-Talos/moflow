# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)



DESCRIPTOR = descriptor.FileDescriptor(
  name='stmt.piqi.proto',
  package='',
  serialized_pb='\n\x0fstmt.piqi.proto\"\x1e\n\x07program\x12\x13\n\x04\x65lem\x18\x01 \x03(\x0b\x32\x05.stmt\"\xeb\x01\n\x04stmt\x12\x13\n\x04move\x18\x01 \x01(\x0b\x32\x05.move\x12\x11\n\x03jmp\x18\x02 \x01(\x0b\x32\x04.jmp\x12\x13\n\x04\x63jmp\x18\x03 \x01(\x0b\x32\x05.cjmp\x12\x1f\n\nlabel_stmt\x18\x04 \x01(\x0b\x32\x0b.label_stmt\x12\x13\n\x04halt\x18\x05 \x01(\x0b\x32\x05.halt\x12!\n\x0b\x61ssert_stmt\x18\x06 \x01(\x0b\x32\x0c.assert_stmt\x12\x17\n\x06\x61ssume\x18\x07 \x01(\x0b\x32\x07.assume\x12\x19\n\x07\x63omment\x18\x08 \x01(\x0b\x32\x08.comment\x12\x19\n\x07special\x18\t \x01(\x0b\x32\x08.special\"M\n\x04move\x12\x11\n\x03var\x18\x01 \x02(\x0b\x32\x04.var\x12\x11\n\x03\x65xp\x18\x02 \x02(\x0b\x32\x04.exp\x12\x1f\n\nattributes\x18\x03 \x02(\x0b\x32\x0b.attributes\"9\n\x03jmp\x12\x11\n\x03\x65xp\x18\x01 \x02(\x0b\x32\x04.exp\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\"h\n\x04\x63jmp\x12\x12\n\x04\x63ond\x18\x01 \x02(\x0b\x32\x04.exp\x12\x14\n\x06iftrue\x18\x02 \x02(\x0b\x32\x04.exp\x12\x15\n\x07iffalse\x18\x03 \x02(\x0b\x32\x04.exp\x12\x1f\n\nattributes\x18\x04 \x02(\x0b\x32\x0b.attributes\"D\n\nlabel_stmt\x12\x15\n\x05label\x18\x01 \x02(\x0b\x32\x06.label\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\":\n\x04halt\x12\x11\n\x03\x65xp\x18\x01 \x02(\x0b\x32\x04.exp\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\"A\n\x0b\x61ssert_stmt\x12\x11\n\x03\x65xp\x18\x01 \x02(\x0b\x32\x04.exp\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\"<\n\x06\x61ssume\x12\x11\n\x03\x65xp\x18\x01 \x02(\x0b\x32\x04.exp\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\":\n\x07\x63omment\x12\x0e\n\x06string\x18\x01 \x02(\t\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\":\n\x07special\x12\x0e\n\x06string\x18\x01 \x02(\t\x12\x1f\n\nattributes\x18\x02 \x02(\x0b\x32\x0b.attributes\">\n\x03typ\x12\x0b\n\x03reg\x18\x01 \x01(\x11\x12\x13\n\x04tmem\x18\x02 \x01(\x0b\x32\x05.tmem\x12\x15\n\x05\x61rray\x18\x03 \x01(\x0b\x32\x06.array\" \n\x04tmem\x12\x18\n\nindex_type\x18\x01 \x02(\x0b\x32\x04.typ\"=\n\x05\x61rray\x12\x18\n\nindex_type\x18\x01 \x02(\x0b\x32\x04.typ\x12\x1a\n\x0c\x65lement_type\x18\x02 \x02(\x0b\x32\x04.typ\"#\n\x05label\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x61\x64\x64r\x18\x02 \x01(\x12\"2\n\x03var\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\n\n\x02id\x18\x02 \x02(\x11\x12\x11\n\x03typ\x18\x03 \x02(\x0b\x32\x04.typ\"\xb1\x01\n\tattribute\x12\x0b\n\x03\x61sm\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\x12\x12\x19\n\x07liveout\x18\x03 \x01(\x0b\x32\x08.liveout\x12\x0f\n\x07strattr\x18\x04 \x01(\t\x12\x19\n\x07\x63ontext\x18\x05 \x01(\x0b\x32\x08.context\x12\x11\n\tthread_id\x18\x06 \x01(\x04\x12\x1d\n\tsynthetic\x18\x07 \x01(\x0b\x32\n.synthetic\x12\r\n\x05other\x18\x08 \x01(\t\"&\n\nattributes\x12\x18\n\x04\x65lem\x18\x01 \x03(\x0b\x32\n.attribute\"\t\n\x07liveout\"\x0b\n\tsynthetic\"]\n\x15operand_info_specific\x12!\n\x0bmem_operand\x18\x01 \x01(\x0b\x32\x0c.mem_operand\x12!\n\x0breg_operand\x18\x02 \x01(\x0b\x32\x0c.reg_operand\"\x1b\n\x0breg_operand\x12\x0c\n\x04name\x18\x01 \x02(\t\"K\n\roperand_usage\x12\x0c\n\x04read\x18\x01 \x02(\x08\x12\x0f\n\x07written\x18\x02 \x02(\x08\x12\r\n\x05index\x18\x03 \x02(\x08\x12\x0c\n\x04\x62\x61se\x18\x04 \x02(\x08\"\x1e\n\x0bmem_operand\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x02(\x12\"H\n\ntaint_info\x12\x10\n\x08no_taint\x18\x01 \x01(\x08\x12\x10\n\x08taint_id\x18\x02 \x01(\x04\x12\x16\n\x0etaint_multiple\x18\x03 \x01(\x08\"\xab\x01\n\x07\x63ontext\x12\x35\n\x15operand_info_specific\x18\x01 \x02(\x0b\x32\x16.operand_info_specific\x12\x12\n\nbit_length\x18\x02 \x02(\x11\x12%\n\roperand_usage\x18\x03 \x02(\x0b\x32\x0e.operand_usage\x12\x1f\n\ntaint_info\x18\x04 \x02(\x0b\x32\x0b.taint_info\x12\r\n\x05value\x18\x05 \x02(\t\"\xa4\x02\n\x03\x65xp\x12\x13\n\x04load\x18\x01 \x01(\x0b\x32\x05.load\x12\x15\n\x05store\x18\x02 \x01(\x0b\x32\x06.store\x12\x15\n\x05\x62inop\x18\x03 \x01(\x0b\x32\x06.binop\x12\x13\n\x04unop\x18\x04 \x01(\x0b\x32\x05.unop\x12\x11\n\x03var\x18\x05 \x01(\x0b\x32\x04.var\x12\x0b\n\x03lab\x18\x06 \x01(\t\x12\x13\n\x04inte\x18\x07 \x01(\x0b\x32\x05.inte\x12\x13\n\x04\x63\x61st\x18\x08 \x01(\x0b\x32\x05.cast\x12\x19\n\x07let_exp\x18\t \x01(\x0b\x32\x08.let_exp\x12\x19\n\x07unknown\x18\n \x01(\x0b\x32\x08.unknown\x12\x11\n\x03ite\x18\x0b \x01(\x0b\x32\x04.ite\x12\x19\n\x07\x65xtract\x18\x0c \x01(\x0b\x32\x08.extract\x12\x17\n\x06\x63oncat\x18\r \x01(\x0b\x32\x07.concat\"\\\n\x04load\x12\x14\n\x06memory\x18\x01 \x02(\x0b\x32\x04.exp\x12\x15\n\x07\x61\x64\x64ress\x18\x02 \x02(\x0b\x32\x04.exp\x12\x14\n\x06\x65ndian\x18\x03 \x02(\x0b\x32\x04.exp\x12\x11\n\x03typ\x18\x04 \x02(\x0b\x32\x04.typ\"r\n\x05store\x12\x14\n\x06memory\x18\x01 \x02(\x0b\x32\x04.exp\x12\x15\n\x07\x61\x64\x64ress\x18\x02 \x02(\x0b\x32\x04.exp\x12\x13\n\x05value\x18\x03 \x02(\x0b\x32\x04.exp\x12\x14\n\x06\x65ndian\x18\x04 \x02(\x0b\x32\x04.exp\x12\x11\n\x03typ\x18\x05 \x02(\x0b\x32\x04.typ\"P\n\x05\x62inop\x12\x1f\n\nbinop_type\x18\x01 \x02(\x0e\x32\x0b.binop_type\x12\x12\n\x04lexp\x18\x02 \x02(\x0b\x32\x04.exp\x12\x12\n\x04rexp\x18\x03 \x02(\x0b\x32\x04.exp\"8\n\x04unop\x12\x1d\n\tunop_type\x18\x01 \x02(\x0e\x32\n.unop_type\x12\x11\n\x03\x65xp\x18\x02 \x02(\x0b\x32\x04.exp\"&\n\x04inte\x12\x0b\n\x03int\x18\x01 \x02(\t\x12\x11\n\x03typ\x18\x02 \x02(\x0b\x32\x04.typ\"P\n\x04\x63\x61st\x12\x1d\n\tcast_type\x18\x01 \x02(\x0e\x32\n.cast_type\x12\x16\n\x08new_type\x18\x02 \x02(\x0b\x32\x04.typ\x12\x11\n\x03\x65xp\x18\x03 \x02(\x0b\x32\x04.exp\"@\n\x07let_exp\x12\x11\n\x03var\x18\x01 \x02(\x0b\x32\x04.var\x12\x10\n\x02\x65\x31\x18\x02 \x02(\x0b\x32\x04.exp\x12\x10\n\x02\x65\x32\x18\x03 \x02(\x0b\x32\x04.exp\",\n\x07unknown\x12\x0e\n\x06string\x18\x01 \x02(\t\x12\x11\n\x03typ\x18\x02 \x02(\x0b\x32\x04.typ\"K\n\x03ite\x12\x17\n\tcondition\x18\x01 \x02(\x0b\x32\x04.exp\x12\x14\n\x06iftrue\x18\x02 \x02(\x0b\x32\x04.exp\x12\x15\n\x07iffalse\x18\x03 \x02(\x0b\x32\x04.exp\"8\n\x07\x65xtract\x12\x0c\n\x04hbit\x18\x01 \x02(\x11\x12\x0c\n\x04lbit\x18\x02 \x02(\x11\x12\x11\n\x03\x65xp\x18\x03 \x02(\x0b\x32\x04.exp\",\n\x06\x63oncat\x12\x10\n\x02le\x18\x01 \x02(\x0b\x32\x04.exp\x12\x10\n\x02re\x18\x02 \x02(\x0b\x32\x04.exp*L\n\tcast_type\x12\x11\n\rcast_unsigned\x10\x01\x12\x0f\n\x0b\x63\x61st_signed\x10\x02\x12\r\n\tcast_high\x10\x03\x12\x0c\n\x08\x63\x61st_low\x10\x04*\xd3\x01\n\nbinop_type\x12\x08\n\x04plus\x10\x01\x12\t\n\x05minus\x10\x02\x12\t\n\x05times\x10\x03\x12\n\n\x06\x64ivide\x10\x04\x12\x0b\n\x07sdivide\x10\x05\x12\n\n\x06modbop\x10\x06\x12\x08\n\x04smod\x10\x07\x12\n\n\x06lshift\x10\x08\x12\n\n\x06rshift\x10\t\x12\x0b\n\x07\x61rshift\x10\n\x12\n\n\x06\x61ndbop\x10\x0b\x12\t\n\x05orbop\x10\x0c\x12\x07\n\x03xor\x10\r\x12\x06\n\x02\x65q\x10\x0e\x12\x07\n\x03neq\x10\x0f\x12\x06\n\x02lt\x10\x10\x12\x06\n\x02le\x10\x11\x12\x07\n\x03slt\x10\x12\x12\x07\n\x03sle\x10\x13*\x1d\n\tunop_type\x12\x07\n\x03neg\x10\x01\x12\x07\n\x03not\x10\x02')

_CAST_TYPE = descriptor.EnumDescriptor(
  name='cast_type',
  full_name='cast_type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='cast_unsigned', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='cast_signed', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='cast_high', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='cast_low', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2947,
  serialized_end=3023,
)


_BINOP_TYPE = descriptor.EnumDescriptor(
  name='binop_type',
  full_name='binop_type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='plus', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='minus', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='times', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='divide', index=3, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='sdivide', index=4, number=5,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='modbop', index=5, number=6,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='smod', index=6, number=7,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='lshift', index=7, number=8,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='rshift', index=8, number=9,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='arshift', index=9, number=10,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='andbop', index=10, number=11,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='orbop', index=11, number=12,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='xor', index=12, number=13,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='eq', index=13, number=14,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='neq', index=14, number=15,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='lt', index=15, number=16,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='le', index=16, number=17,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='slt', index=17, number=18,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='sle', index=18, number=19,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3026,
  serialized_end=3237,
)


_UNOP_TYPE = descriptor.EnumDescriptor(
  name='unop_type',
  full_name='unop_type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='neg', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='not', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3239,
  serialized_end=3268,
)


cast_unsigned = 1
cast_signed = 2
cast_high = 3
cast_low = 4
plus = 1
minus = 2
times = 3
divide = 4
sdivide = 5
modbop = 6
smod = 7
lshift = 8
rshift = 9
arshift = 10
andbop = 11
orbop = 12
xor = 13
eq = 14
neq = 15
lt = 16
le = 17
slt = 18
sle = 19
neg = 1
not = 2



_PROGRAM = descriptor.Descriptor(
  name='program',
  full_name='program',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='elem', full_name='program.elem', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=19,
  serialized_end=49,
)


_STMT = descriptor.Descriptor(
  name='stmt',
  full_name='stmt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='move', full_name='stmt.move', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='jmp', full_name='stmt.jmp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cjmp', full_name='stmt.cjmp', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='label_stmt', full_name='stmt.label_stmt', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='halt', full_name='stmt.halt', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='assert_stmt', full_name='stmt.assert_stmt', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='assume', full_name='stmt.assume', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='comment', full_name='stmt.comment', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='special', full_name='stmt.special', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=52,
  serialized_end=287,
)


_MOVE = descriptor.Descriptor(
  name='move',
  full_name='move',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='var', full_name='move.var', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='exp', full_name='move.exp', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='move.attributes', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=289,
  serialized_end=366,
)


_JMP = descriptor.Descriptor(
  name='jmp',
  full_name='jmp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='exp', full_name='jmp.exp', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='jmp.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=368,
  serialized_end=425,
)


_CJMP = descriptor.Descriptor(
  name='cjmp',
  full_name='cjmp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cond', full_name='cjmp.cond', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='iftrue', full_name='cjmp.iftrue', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='iffalse', full_name='cjmp.iffalse', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='cjmp.attributes', index=3,
      number=4, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=427,
  serialized_end=531,
)


_LABEL_STMT = descriptor.Descriptor(
  name='label_stmt',
  full_name='label_stmt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='label', full_name='label_stmt.label', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='label_stmt.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=533,
  serialized_end=601,
)


_HALT = descriptor.Descriptor(
  name='halt',
  full_name='halt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='exp', full_name='halt.exp', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='halt.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=603,
  serialized_end=661,
)


_ASSERT_STMT = descriptor.Descriptor(
  name='assert_stmt',
  full_name='assert_stmt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='exp', full_name='assert_stmt.exp', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='assert_stmt.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=663,
  serialized_end=728,
)


_ASSUME = descriptor.Descriptor(
  name='assume',
  full_name='assume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='exp', full_name='assume.exp', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='assume.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=730,
  serialized_end=790,
)


_COMMENT = descriptor.Descriptor(
  name='comment',
  full_name='comment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='string', full_name='comment.string', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='comment.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=792,
  serialized_end=850,
)


_SPECIAL = descriptor.Descriptor(
  name='special',
  full_name='special',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='string', full_name='special.string', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='attributes', full_name='special.attributes', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=852,
  serialized_end=910,
)


_TYP = descriptor.Descriptor(
  name='typ',
  full_name='typ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='reg', full_name='typ.reg', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='tmem', full_name='typ.tmem', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='array', full_name='typ.array', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=912,
  serialized_end=974,
)


_TMEM = descriptor.Descriptor(
  name='tmem',
  full_name='tmem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='index_type', full_name='tmem.index_type', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=976,
  serialized_end=1008,
)


_ARRAY = descriptor.Descriptor(
  name='array',
  full_name='array',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='index_type', full_name='array.index_type', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='element_type', full_name='array.element_type', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1010,
  serialized_end=1071,
)


_LABEL = descriptor.Descriptor(
  name='label',
  full_name='label',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='label.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='addr', full_name='label.addr', index=1,
      number=2, type=18, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1073,
  serialized_end=1108,
)


_VAR = descriptor.Descriptor(
  name='var',
  full_name='var',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='var.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='id', full_name='var.id', index=1,
      number=2, type=17, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='typ', full_name='var.typ', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1110,
  serialized_end=1160,
)


_ATTRIBUTE = descriptor.Descriptor(
  name='attribute',
  full_name='attribute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='asm', full_name='attribute.asm', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='address', full_name='attribute.address', index=1,
      number=2, type=18, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='liveout', full_name='attribute.liveout', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='strattr', full_name='attribute.strattr', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='context', full_name='attribute.context', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thread_id', full_name='attribute.thread_id', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='synthetic', full_name='attribute.synthetic', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='other', full_name='attribute.other', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1163,
  serialized_end=1340,
)


_ATTRIBUTES = descriptor.Descriptor(
  name='attributes',
  full_name='attributes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='elem', full_name='attributes.elem', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1342,
  serialized_end=1380,
)


_LIVEOUT = descriptor.Descriptor(
  name='liveout',
  full_name='liveout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1206,
  serialized_end=1215,
)


_SYNTHETIC = descriptor.Descriptor(
  name='synthetic',
  full_name='synthetic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1296,
  serialized_end=1307,
)


_OPERAND_INFO_SPECIFIC = descriptor.Descriptor(
  name='operand_info_specific',
  full_name='operand_info_specific',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='mem_operand', full_name='operand_info_specific.mem_operand', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='reg_operand', full_name='operand_info_specific.reg_operand', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1406,
  serialized_end=1499,
)


_REG_OPERAND = descriptor.Descriptor(
  name='reg_operand',
  full_name='reg_operand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='reg_operand.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1501,
  serialized_end=1528,
)


_OPERAND_USAGE = descriptor.Descriptor(
  name='operand_usage',
  full_name='operand_usage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='read', full_name='operand_usage.read', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='written', full_name='operand_usage.written', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='index', full_name='operand_usage.index', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='base', full_name='operand_usage.base', index=3,
      number=4, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1530,
  serialized_end=1605,
)


_MEM_OPERAND = descriptor.Descriptor(
  name='mem_operand',
  full_name='mem_operand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='address', full_name='mem_operand.address', index=0,
      number=1, type=18, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1607,
  serialized_end=1637,
)


_TAINT_INFO = descriptor.Descriptor(
  name='taint_info',
  full_name='taint_info',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='no_taint', full_name='taint_info.no_taint', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='taint_id', full_name='taint_info.taint_id', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='taint_multiple', full_name='taint_info.taint_multiple', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1639,
  serialized_end=1711,
)


_CONTEXT = descriptor.Descriptor(
  name='context',
  full_name='context',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='operand_info_specific', full_name='context.operand_info_specific', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bit_length', full_name='context.bit_length', index=1,
      number=2, type=17, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='operand_usage', full_name='context.operand_usage', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='taint_info', full_name='context.taint_info', index=3,
      number=4, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='value', full_name='context.value', index=4,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1714,
  serialized_end=1885,
)


_EXP = descriptor.Descriptor(
  name='exp',
  full_name='exp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='load', full_name='exp.load', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='store', full_name='exp.store', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='binop', full_name='exp.binop', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='unop', full_name='exp.unop', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='var', full_name='exp.var', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lab', full_name='exp.lab', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='inte', full_name='exp.inte', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cast', full_name='exp.cast', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='let_exp', full_name='exp.let_exp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='unknown', full_name='exp.unknown', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ite', full_name='exp.ite', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='extract', full_name='exp.extract', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='concat', full_name='exp.concat', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1888,
  serialized_end=2180,
)


_LOAD = descriptor.Descriptor(
  name='load',
  full_name='load',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='memory', full_name='load.memory', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='address', full_name='load.address', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='endian', full_name='load.endian', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='typ', full_name='load.typ', index=3,
      number=4, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2182,
  serialized_end=2274,
)


_STORE = descriptor.Descriptor(
  name='store',
  full_name='store',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='memory', full_name='store.memory', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='address', full_name='store.address', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='value', full_name='store.value', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='endian', full_name='store.endian', index=3,
      number=4, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='typ', full_name='store.typ', index=4,
      number=5, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2276,
  serialized_end=2390,
)


_BINOP = descriptor.Descriptor(
  name='binop',
  full_name='binop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='binop_type', full_name='binop.binop_type', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lexp', full_name='binop.lexp', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='rexp', full_name='binop.rexp', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2392,
  serialized_end=2472,
)


_UNOP = descriptor.Descriptor(
  name='unop',
  full_name='unop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='unop_type', full_name='unop.unop_type', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='exp', full_name='unop.exp', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2474,
  serialized_end=2530,
)


_INTE = descriptor.Descriptor(
  name='inte',
  full_name='inte',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='int', full_name='inte.int', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='typ', full_name='inte.typ', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2532,
  serialized_end=2570,
)


_CAST = descriptor.Descriptor(
  name='cast',
  full_name='cast',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='cast_type', full_name='cast.cast_type', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='new_type', full_name='cast.new_type', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='exp', full_name='cast.exp', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2572,
  serialized_end=2652,
)


_LET_EXP = descriptor.Descriptor(
  name='let_exp',
  full_name='let_exp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='var', full_name='let_exp.var', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='e1', full_name='let_exp.e1', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='e2', full_name='let_exp.e2', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2654,
  serialized_end=2718,
)


_UNKNOWN = descriptor.Descriptor(
  name='unknown',
  full_name='unknown',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='string', full_name='unknown.string', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='typ', full_name='unknown.typ', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2720,
  serialized_end=2764,
)


_ITE = descriptor.Descriptor(
  name='ite',
  full_name='ite',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='condition', full_name='ite.condition', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='iftrue', full_name='ite.iftrue', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='iffalse', full_name='ite.iffalse', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2766,
  serialized_end=2841,
)


_EXTRACT = descriptor.Descriptor(
  name='extract',
  full_name='extract',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='hbit', full_name='extract.hbit', index=0,
      number=1, type=17, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lbit', full_name='extract.lbit', index=1,
      number=2, type=17, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='exp', full_name='extract.exp', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2843,
  serialized_end=2899,
)


_CONCAT = descriptor.Descriptor(
  name='concat',
  full_name='concat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='le', full_name='concat.le', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='re', full_name='concat.re', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=2901,
  serialized_end=2945,
)

_PROGRAM.fields_by_name['elem'].message_type = _STMT
_STMT.fields_by_name['move'].message_type = _MOVE
_STMT.fields_by_name['jmp'].message_type = _JMP
_STMT.fields_by_name['cjmp'].message_type = _CJMP
_STMT.fields_by_name['label_stmt'].message_type = _LABEL_STMT
_STMT.fields_by_name['halt'].message_type = _HALT
_STMT.fields_by_name['assert_stmt'].message_type = _ASSERT_STMT
_STMT.fields_by_name['assume'].message_type = _ASSUME
_STMT.fields_by_name['comment'].message_type = _COMMENT
_STMT.fields_by_name['special'].message_type = _SPECIAL
_MOVE.fields_by_name['var'].message_type = _VAR
_MOVE.fields_by_name['exp'].message_type = _EXP
_MOVE.fields_by_name['attributes'].message_type = _ATTRIBUTES
_JMP.fields_by_name['exp'].message_type = _EXP
_JMP.fields_by_name['attributes'].message_type = _ATTRIBUTES
_CJMP.fields_by_name['cond'].message_type = _EXP
_CJMP.fields_by_name['iftrue'].message_type = _EXP
_CJMP.fields_by_name['iffalse'].message_type = _EXP
_CJMP.fields_by_name['attributes'].message_type = _ATTRIBUTES
_LABEL_STMT.fields_by_name['label'].message_type = _LABEL
_LABEL_STMT.fields_by_name['attributes'].message_type = _ATTRIBUTES
_HALT.fields_by_name['exp'].message_type = _EXP
_HALT.fields_by_name['attributes'].message_type = _ATTRIBUTES
_ASSERT_STMT.fields_by_name['exp'].message_type = _EXP
_ASSERT_STMT.fields_by_name['attributes'].message_type = _ATTRIBUTES
_ASSUME.fields_by_name['exp'].message_type = _EXP
_ASSUME.fields_by_name['attributes'].message_type = _ATTRIBUTES
_COMMENT.fields_by_name['attributes'].message_type = _ATTRIBUTES
_SPECIAL.fields_by_name['attributes'].message_type = _ATTRIBUTES
_TYP.fields_by_name['tmem'].message_type = _TMEM
_TYP.fields_by_name['array'].message_type = _ARRAY
_TMEM.fields_by_name['index_type'].message_type = _TYP
_ARRAY.fields_by_name['index_type'].message_type = _TYP
_ARRAY.fields_by_name['element_type'].message_type = _TYP
_VAR.fields_by_name['typ'].message_type = _TYP
_ATTRIBUTE.fields_by_name['liveout'].message_type = _LIVEOUT
_ATTRIBUTE.fields_by_name['context'].message_type = _CONTEXT
_ATTRIBUTE.fields_by_name['synthetic'].message_type = _SYNTHETIC
_ATTRIBUTES.fields_by_name['elem'].message_type = _ATTRIBUTE
_OPERAND_INFO_SPECIFIC.fields_by_name['mem_operand'].message_type = _MEM_OPERAND
_OPERAND_INFO_SPECIFIC.fields_by_name['reg_operand'].message_type = _REG_OPERAND
_CONTEXT.fields_by_name['operand_info_specific'].message_type = _OPERAND_INFO_SPECIFIC
_CONTEXT.fields_by_name['operand_usage'].message_type = _OPERAND_USAGE
_CONTEXT.fields_by_name['taint_info'].message_type = _TAINT_INFO
_EXP.fields_by_name['load'].message_type = _LOAD
_EXP.fields_by_name['store'].message_type = _STORE
_EXP.fields_by_name['binop'].message_type = _BINOP
_EXP.fields_by_name['unop'].message_type = _UNOP
_EXP.fields_by_name['var'].message_type = _VAR
_EXP.fields_by_name['inte'].message_type = _INTE
_EXP.fields_by_name['cast'].message_type = _CAST
_EXP.fields_by_name['let_exp'].message_type = _LET_EXP
_EXP.fields_by_name['unknown'].message_type = _UNKNOWN
_EXP.fields_by_name['ite'].message_type = _ITE
_EXP.fields_by_name['extract'].message_type = _EXTRACT
_EXP.fields_by_name['concat'].message_type = _CONCAT
_LOAD.fields_by_name['memory'].message_type = _EXP
_LOAD.fields_by_name['address'].message_type = _EXP
_LOAD.fields_by_name['endian'].message_type = _EXP
_LOAD.fields_by_name['typ'].message_type = _TYP
_STORE.fields_by_name['memory'].message_type = _EXP
_STORE.fields_by_name['address'].message_type = _EXP
_STORE.fields_by_name['value'].message_type = _EXP
_STORE.fields_by_name['endian'].message_type = _EXP
_STORE.fields_by_name['typ'].message_type = _TYP
_BINOP.fields_by_name['binop_type'].enum_type = _BINOP_TYPE
_BINOP.fields_by_name['lexp'].message_type = _EXP
_BINOP.fields_by_name['rexp'].message_type = _EXP
_UNOP.fields_by_name['unop_type'].enum_type = _UNOP_TYPE
_UNOP.fields_by_name['exp'].message_type = _EXP
_INTE.fields_by_name['typ'].message_type = _TYP
_CAST.fields_by_name['cast_type'].enum_type = _CAST_TYPE
_CAST.fields_by_name['new_type'].message_type = _TYP
_CAST.fields_by_name['exp'].message_type = _EXP
_LET_EXP.fields_by_name['var'].message_type = _VAR
_LET_EXP.fields_by_name['e1'].message_type = _EXP
_LET_EXP.fields_by_name['e2'].message_type = _EXP
_UNKNOWN.fields_by_name['typ'].message_type = _TYP
_ITE.fields_by_name['condition'].message_type = _EXP
_ITE.fields_by_name['iftrue'].message_type = _EXP
_ITE.fields_by_name['iffalse'].message_type = _EXP
_EXTRACT.fields_by_name['exp'].message_type = _EXP
_CONCAT.fields_by_name['le'].message_type = _EXP
_CONCAT.fields_by_name['re'].message_type = _EXP
DESCRIPTOR.message_types_by_name['program'] = _PROGRAM
DESCRIPTOR.message_types_by_name['stmt'] = _STMT
DESCRIPTOR.message_types_by_name['move'] = _MOVE
DESCRIPTOR.message_types_by_name['jmp'] = _JMP
DESCRIPTOR.message_types_by_name['cjmp'] = _CJMP
DESCRIPTOR.message_types_by_name['label_stmt'] = _LABEL_STMT
DESCRIPTOR.message_types_by_name['halt'] = _HALT
DESCRIPTOR.message_types_by_name['assert_stmt'] = _ASSERT_STMT
DESCRIPTOR.message_types_by_name['assume'] = _ASSUME
DESCRIPTOR.message_types_by_name['comment'] = _COMMENT
DESCRIPTOR.message_types_by_name['special'] = _SPECIAL
DESCRIPTOR.message_types_by_name['typ'] = _TYP
DESCRIPTOR.message_types_by_name['tmem'] = _TMEM
DESCRIPTOR.message_types_by_name['array'] = _ARRAY
DESCRIPTOR.message_types_by_name['label'] = _LABEL
DESCRIPTOR.message_types_by_name['var'] = _VAR
DESCRIPTOR.message_types_by_name['attribute'] = _ATTRIBUTE
DESCRIPTOR.message_types_by_name['attributes'] = _ATTRIBUTES
DESCRIPTOR.message_types_by_name['liveout'] = _LIVEOUT
DESCRIPTOR.message_types_by_name['synthetic'] = _SYNTHETIC
DESCRIPTOR.message_types_by_name['operand_info_specific'] = _OPERAND_INFO_SPECIFIC
DESCRIPTOR.message_types_by_name['reg_operand'] = _REG_OPERAND
DESCRIPTOR.message_types_by_name['operand_usage'] = _OPERAND_USAGE
DESCRIPTOR.message_types_by_name['mem_operand'] = _MEM_OPERAND
DESCRIPTOR.message_types_by_name['taint_info'] = _TAINT_INFO
DESCRIPTOR.message_types_by_name['context'] = _CONTEXT
DESCRIPTOR.message_types_by_name['exp'] = _EXP
DESCRIPTOR.message_types_by_name['load'] = _LOAD
DESCRIPTOR.message_types_by_name['store'] = _STORE
DESCRIPTOR.message_types_by_name['binop'] = _BINOP
DESCRIPTOR.message_types_by_name['unop'] = _UNOP
DESCRIPTOR.message_types_by_name['inte'] = _INTE
DESCRIPTOR.message_types_by_name['cast'] = _CAST
DESCRIPTOR.message_types_by_name['let_exp'] = _LET_EXP
DESCRIPTOR.message_types_by_name['unknown'] = _UNKNOWN
DESCRIPTOR.message_types_by_name['ite'] = _ITE
DESCRIPTOR.message_types_by_name['extract'] = _EXTRACT
DESCRIPTOR.message_types_by_name['concat'] = _CONCAT

class program(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PROGRAM
  
  # @@protoc_insertion_point(class_scope:program)

class stmt(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STMT
  
  # @@protoc_insertion_point(class_scope:stmt)

class move(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MOVE
  
  # @@protoc_insertion_point(class_scope:move)

class jmp(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _JMP
  
  # @@protoc_insertion_point(class_scope:jmp)

class cjmp(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CJMP
  
  # @@protoc_insertion_point(class_scope:cjmp)

class label_stmt(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LABEL_STMT
  
  # @@protoc_insertion_point(class_scope:label_stmt)

class halt(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HALT
  
  # @@protoc_insertion_point(class_scope:halt)

class assert_stmt(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ASSERT_STMT
  
  # @@protoc_insertion_point(class_scope:assert_stmt)

class assume(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ASSUME
  
  # @@protoc_insertion_point(class_scope:assume)

class comment(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _COMMENT
  
  # @@protoc_insertion_point(class_scope:comment)

class special(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SPECIAL
  
  # @@protoc_insertion_point(class_scope:special)

class typ(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TYP
  
  # @@protoc_insertion_point(class_scope:typ)

class tmem(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TMEM
  
  # @@protoc_insertion_point(class_scope:tmem)

class array(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ARRAY
  
  # @@protoc_insertion_point(class_scope:array)

class label(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LABEL
  
  # @@protoc_insertion_point(class_scope:label)

class var(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _VAR
  
  # @@protoc_insertion_point(class_scope:var)

class attribute(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ATTRIBUTE
  
  # @@protoc_insertion_point(class_scope:attribute)

class attributes(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ATTRIBUTES
  
  # @@protoc_insertion_point(class_scope:attributes)

class liveout(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LIVEOUT
  
  # @@protoc_insertion_point(class_scope:liveout)

class synthetic(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SYNTHETIC
  
  # @@protoc_insertion_point(class_scope:synthetic)

class operand_info_specific(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OPERAND_INFO_SPECIFIC
  
  # @@protoc_insertion_point(class_scope:operand_info_specific)

class reg_operand(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _REG_OPERAND
  
  # @@protoc_insertion_point(class_scope:reg_operand)

class operand_usage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OPERAND_USAGE
  
  # @@protoc_insertion_point(class_scope:operand_usage)

class mem_operand(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MEM_OPERAND
  
  # @@protoc_insertion_point(class_scope:mem_operand)

class taint_info(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TAINT_INFO
  
  # @@protoc_insertion_point(class_scope:taint_info)

class context(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONTEXT
  
  # @@protoc_insertion_point(class_scope:context)

class exp(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _EXP
  
  # @@protoc_insertion_point(class_scope:exp)

class load(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOAD
  
  # @@protoc_insertion_point(class_scope:load)

class store(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STORE
  
  # @@protoc_insertion_point(class_scope:store)

class binop(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _BINOP
  
  # @@protoc_insertion_point(class_scope:binop)

class unop(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _UNOP
  
  # @@protoc_insertion_point(class_scope:unop)

class inte(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _INTE
  
  # @@protoc_insertion_point(class_scope:inte)

class cast(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CAST
  
  # @@protoc_insertion_point(class_scope:cast)

class let_exp(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LET_EXP
  
  # @@protoc_insertion_point(class_scope:let_exp)

class unknown(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _UNKNOWN
  
  # @@protoc_insertion_point(class_scope:unknown)

class ite(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ITE
  
  # @@protoc_insertion_point(class_scope:ite)

class extract(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _EXTRACT
  
  # @@protoc_insertion_point(class_scope:extract)

class concat(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONCAT
  
  # @@protoc_insertion_point(class_scope:concat)

# @@protoc_insertion_point(module_scope)
